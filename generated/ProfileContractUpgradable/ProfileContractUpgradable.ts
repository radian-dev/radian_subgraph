// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddAddressToProfile extends ethereum.Event {
  get params(): AddAddressToProfile__Params {
    return new AddAddressToProfile__Params(this);
  }
}

export class AddAddressToProfile__Params {
  _event: AddAddressToProfile;

  constructor(event: AddAddressToProfile) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get initiator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get profileID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class AddExternalAddressToProfile extends ethereum.Event {
  get params(): AddExternalAddressToProfile__Params {
    return new AddExternalAddressToProfile__Params(this);
  }
}

export class AddExternalAddressToProfile__Params {
  _event: AddExternalAddressToProfile;

  constructor(event: AddExternalAddressToProfile) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get externalAddress(): string {
    return this._event.parameters[1].value.toString();
  }

  get networkID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get profileID(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class AddExternalNetwork extends ethereum.Event {
  get params(): AddExternalNetwork__Params {
    return new AddExternalNetwork__Params(this);
  }
}

export class AddExternalNetwork__Params {
  _event: AddExternalNetwork;

  constructor(event: AddExternalNetwork) {
    this._event = event;
  }

  get initiator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get networkType(): string {
    return this._event.parameters[1].value.toString();
  }

  get networkID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class AddExternalProfileMapping extends ethereum.Event {
  get params(): AddExternalProfileMapping__Params {
    return new AddExternalProfileMapping__Params(this);
  }
}

export class AddExternalProfileMapping__Params {
  _event: AddExternalProfileMapping;

  constructor(event: AddExternalProfileMapping) {
    this._event = event;
  }

  get initiator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get profileID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get networkID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class AddProfileMapping extends ethereum.Event {
  get params(): AddProfileMapping__Params {
    return new AddProfileMapping__Params(this);
  }
}

export class AddProfileMapping__Params {
  _event: AddProfileMapping;

  constructor(event: AddProfileMapping) {
    this._event = event;
  }

  get initiator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get profileID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CreateProfile extends ethereum.Event {
  get params(): CreateProfile__Params {
    return new CreateProfile__Params(this);
  }
}

export class CreateProfile__Params {
  _event: CreateProfile;

  constructor(event: CreateProfile) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get profileID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get identityID(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class SetExternalNetworkState extends ethereum.Event {
  get params(): SetExternalNetworkState__Params {
    return new SetExternalNetworkState__Params(this);
  }
}

export class SetExternalNetworkState__Params {
  _event: SetExternalNetworkState;

  constructor(event: SetExternalNetworkState) {
    this._event = event;
  }

  get initiator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get networkID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get isEnabled(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class UpdateProfile extends ethereum.Event {
  get params(): UpdateProfile__Params {
    return new UpdateProfile__Params(this);
  }
}

export class UpdateProfile__Params {
  _event: UpdateProfile;

  constructor(event: UpdateProfile) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get profileID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get identityID(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class ProfileContractUpgradable__addressExternalProfileMappingResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class ProfileContractUpgradable__externalAddressProfileMappingResult {
  value0: string;
  value1: BigInt;

  constructor(value0: string, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class ProfileContractUpgradable__getProfilefromAddressResultValue0Struct extends ethereum.Tuple {
  get identityID(): string {
    return this[0].toString();
  }
}

export class ProfileContractUpgradable__getProfilefromAddressV2ResultValue1Struct extends ethereum.Tuple {
  get identityID(): string {
    return this[0].toString();
  }
}

export class ProfileContractUpgradable__getProfilefromAddressV2Result {
  value0: BigInt;
  value1: ProfileContractUpgradable__getProfilefromAddressV2ResultValue1Struct;

  constructor(
    value0: BigInt,
    value1: ProfileContractUpgradable__getProfilefromAddressV2ResultValue1Struct
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    return map;
  }
}

export class ProfileContractUpgradable__getProfilefromIDResultValue0Struct extends ethereum.Tuple {
  get identityID(): string {
    return this[0].toString();
  }
}

export class ProfileContractUpgradable__getProfilesResultValue0Struct extends ethereum.Tuple {
  get identityID(): string {
    return this[0].toString();
  }
}

export class ProfileContractUpgradable extends ethereum.SmartContract {
  static bind(address: Address): ProfileContractUpgradable {
    return new ProfileContractUpgradable("ProfileContractUpgradable", address);
  }

  DAO_ROLE(): Bytes {
    let result = super.call("DAO_ROLE", "DAO_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_DAO_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("DAO_ROLE", "DAO_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  addressExternalProfileMapping(
    param0: Address
  ): ProfileContractUpgradable__addressExternalProfileMappingResult {
    let result = super.call(
      "addressExternalProfileMapping",
      "addressExternalProfileMapping(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new ProfileContractUpgradable__addressExternalProfileMappingResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_addressExternalProfileMapping(
    param0: Address
  ): ethereum.CallResult<
    ProfileContractUpgradable__addressExternalProfileMappingResult
  > {
    let result = super.tryCall(
      "addressExternalProfileMapping",
      "addressExternalProfileMapping(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ProfileContractUpgradable__addressExternalProfileMappingResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  addressProfileMapping(param0: Address): BigInt {
    let result = super.call(
      "addressProfileMapping",
      "addressProfileMapping(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_addressProfileMapping(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "addressProfileMapping",
      "addressProfileMapping(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  addressProfilePendingMapping(param0: Address): BigInt {
    let result = super.call(
      "addressProfilePendingMapping",
      "addressProfilePendingMapping(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_addressProfilePendingMapping(
    param0: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "addressProfilePendingMapping",
      "addressProfilePendingMapping(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  externalAddressProfileMapping(
    param0: BigInt,
    param1: BigInt
  ): ProfileContractUpgradable__externalAddressProfileMappingResult {
    let result = super.call(
      "externalAddressProfileMapping",
      "externalAddressProfileMapping(uint256,uint256):(string,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new ProfileContractUpgradable__externalAddressProfileMappingResult(
      result[0].toString(),
      result[1].toBigInt()
    );
  }

  try_externalAddressProfileMapping(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<
    ProfileContractUpgradable__externalAddressProfileMappingResult
  > {
    let result = super.tryCall(
      "externalAddressProfileMapping",
      "externalAddressProfileMapping(uint256,uint256):(string,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ProfileContractUpgradable__externalAddressProfileMappingResult(
        value[0].toString(),
        value[1].toBigInt()
      )
    );
  }

  externalNetworkEnableMapping(param0: BigInt): boolean {
    let result = super.call(
      "externalNetworkEnableMapping",
      "externalNetworkEnableMapping(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_externalNetworkEnableMapping(
    param0: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "externalNetworkEnableMapping",
      "externalNetworkEnableMapping(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getAddressNumberfromProfile(profileID: BigInt): BigInt {
    let result = super.call(
      "getAddressNumberfromProfile",
      "getAddressNumberfromProfile(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(profileID)]
    );

    return result[0].toBigInt();
  }

  try_getAddressNumberfromProfile(
    profileID: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAddressNumberfromProfile",
      "getAddressNumberfromProfile(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(profileID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAllEnabledNetworkIDs(): Array<BigInt> {
    let result = super.call(
      "getAllEnabledNetworkIDs",
      "getAllEnabledNetworkIDs():(uint256[])",
      []
    );

    return result[0].toBigIntArray();
  }

  try_getAllEnabledNetworkIDs(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getAllEnabledNetworkIDs",
      "getAllEnabledNetworkIDs():(uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getContentID(profileID: BigInt): string {
    let result = super.call("getContentID", "getContentID(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(profileID)
    ]);

    return result[0].toString();
  }

  try_getContentID(profileID: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getContentID",
      "getContentID(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(profileID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getExternalAddressNumberfromProfile(profileID: BigInt): BigInt {
    let result = super.call(
      "getExternalAddressNumberfromProfile",
      "getExternalAddressNumberfromProfile(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(profileID)]
    );

    return result[0].toBigInt();
  }

  try_getExternalAddressNumberfromProfile(
    profileID: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getExternalAddressNumberfromProfile",
      "getExternalAddressNumberfromProfile(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(profileID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getProfilefromAddress(
    owner: Address
  ): ProfileContractUpgradable__getProfilefromAddressResultValue0Struct {
    let result = super.call(
      "getProfilefromAddress",
      "getProfilefromAddress(address):((string))",
      [ethereum.Value.fromAddress(owner)]
    );

    return changetype<
      ProfileContractUpgradable__getProfilefromAddressResultValue0Struct
    >(result[0].toTuple());
  }

  try_getProfilefromAddress(
    owner: Address
  ): ethereum.CallResult<
    ProfileContractUpgradable__getProfilefromAddressResultValue0Struct
  > {
    let result = super.tryCall(
      "getProfilefromAddress",
      "getProfilefromAddress(address):((string))",
      [ethereum.Value.fromAddress(owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<
        ProfileContractUpgradable__getProfilefromAddressResultValue0Struct
      >(value[0].toTuple())
    );
  }

  getProfilefromAddressV2(
    owner: Address
  ): ProfileContractUpgradable__getProfilefromAddressV2Result {
    let result = super.call(
      "getProfilefromAddressV2",
      "getProfilefromAddressV2(address):(uint256,(string))",
      [ethereum.Value.fromAddress(owner)]
    );

    return new ProfileContractUpgradable__getProfilefromAddressV2Result(
      result[0].toBigInt(),
      changetype<
        ProfileContractUpgradable__getProfilefromAddressV2ResultValue1Struct
      >(result[1].toTuple())
    );
  }

  try_getProfilefromAddressV2(
    owner: Address
  ): ethereum.CallResult<
    ProfileContractUpgradable__getProfilefromAddressV2Result
  > {
    let result = super.tryCall(
      "getProfilefromAddressV2",
      "getProfilefromAddressV2(address):(uint256,(string))",
      [ethereum.Value.fromAddress(owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ProfileContractUpgradable__getProfilefromAddressV2Result(
        value[0].toBigInt(),
        changetype<
          ProfileContractUpgradable__getProfilefromAddressV2ResultValue1Struct
        >(value[1].toTuple())
      )
    );
  }

  getProfilefromID(
    profileID: BigInt
  ): ProfileContractUpgradable__getProfilefromIDResultValue0Struct {
    let result = super.call(
      "getProfilefromID",
      "getProfilefromID(uint256):((string))",
      [ethereum.Value.fromUnsignedBigInt(profileID)]
    );

    return changetype<
      ProfileContractUpgradable__getProfilefromIDResultValue0Struct
    >(result[0].toTuple());
  }

  try_getProfilefromID(
    profileID: BigInt
  ): ethereum.CallResult<
    ProfileContractUpgradable__getProfilefromIDResultValue0Struct
  > {
    let result = super.tryCall(
      "getProfilefromID",
      "getProfilefromID(uint256):((string))",
      [ethereum.Value.fromUnsignedBigInt(profileID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ProfileContractUpgradable__getProfilefromIDResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getProfiles(
    limit: BigInt,
    skip: BigInt
  ): Array<ProfileContractUpgradable__getProfilesResultValue0Struct> {
    let result = super.call(
      "getProfiles",
      "getProfiles(uint256,uint256):((string)[])",
      [
        ethereum.Value.fromUnsignedBigInt(limit),
        ethereum.Value.fromUnsignedBigInt(skip)
      ]
    );

    return result[0].toTupleArray<
      ProfileContractUpgradable__getProfilesResultValue0Struct
    >();
  }

  try_getProfiles(
    limit: BigInt,
    skip: BigInt
  ): ethereum.CallResult<
    Array<ProfileContractUpgradable__getProfilesResultValue0Struct>
  > {
    let result = super.tryCall(
      "getProfiles",
      "getProfiles(uint256,uint256):((string)[])",
      [
        ethereum.Value.fromUnsignedBigInt(limit),
        ethereum.Value.fromUnsignedBigInt(skip)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        ProfileContractUpgradable__getProfilesResultValue0Struct
      >()
    );
  }

  getProfilesCount(): BigInt {
    let result = super.call(
      "getProfilesCount",
      "getProfilesCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getProfilesCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getProfilesCount",
      "getProfilesCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getSupportedNetworkListLength(): BigInt {
    let result = super.call(
      "getSupportedNetworkListLength",
      "getSupportedNetworkListLength():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getSupportedNetworkListLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSupportedNetworkListLength",
      "getSupportedNetworkListLength():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSupportedNetworkType(networkID: BigInt): string {
    let result = super.call(
      "getSupportedNetworkType",
      "getSupportedNetworkType(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(networkID)]
    );

    return result[0].toString();
  }

  try_getSupportedNetworkType(networkID: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getSupportedNetworkType",
      "getSupportedNetworkType(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(networkID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getSupportedNetworks(limit: BigInt, skip: BigInt): Array<string> {
    let result = super.call(
      "getSupportedNetworks",
      "getSupportedNetworks(uint256,uint256):(string[])",
      [
        ethereum.Value.fromUnsignedBigInt(limit),
        ethereum.Value.fromUnsignedBigInt(skip)
      ]
    );

    return result[0].toStringArray();
  }

  try_getSupportedNetworks(
    limit: BigInt,
    skip: BigInt
  ): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "getSupportedNetworks",
      "getSupportedNetworks(uint256,uint256):(string[])",
      [
        ethereum.Value.fromUnsignedBigInt(limit),
        ethereum.Value.fromUnsignedBigInt(skip)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  profileAddressMapping(param0: BigInt, param1: BigInt): Address {
    let result = super.call(
      "profileAddressMapping",
      "profileAddressMapping(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toAddress();
  }

  try_profileAddressMapping(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "profileAddressMapping",
      "profileAddressMapping(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  profileManagerMapping(param0: BigInt, param1: BigInt): Address {
    let result = super.call(
      "profileManagerMapping",
      "profileManagerMapping(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toAddress();
  }

  try_profileManagerMapping(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "profileManagerMapping",
      "profileManagerMapping(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  profiles(param0: BigInt): string {
    let result = super.call("profiles", "profiles(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toString();
  }

  try_profiles(param0: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("profiles", "profiles(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  registeredTagContractAddress(): Address {
    let result = super.call(
      "registeredTagContractAddress",
      "registeredTagContractAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_registeredTagContractAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "registeredTagContractAddress",
      "registeredTagContractAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportedExternalNetworks(param0: BigInt): string {
    let result = super.call(
      "supportedExternalNetworks",
      "supportedExternalNetworks(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toString();
  }

  try_supportedExternalNetworks(param0: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "supportedExternalNetworks",
      "supportedExternalNetworks(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  trustedForwarder(): Address {
    let result = super.call(
      "trustedForwarder",
      "trustedForwarder():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_trustedForwarder(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "trustedForwarder",
      "trustedForwarder():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  versionRecipient(): string {
    let result = super.call(
      "versionRecipient",
      "versionRecipient():(string)",
      []
    );

    return result[0].toString();
  }

  try_versionRecipient(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "versionRecipient",
      "versionRecipient():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class AddAddressToProfileCall extends ethereum.Call {
  get inputs(): AddAddressToProfileCall__Inputs {
    return new AddAddressToProfileCall__Inputs(this);
  }

  get outputs(): AddAddressToProfileCall__Outputs {
    return new AddAddressToProfileCall__Outputs(this);
  }
}

export class AddAddressToProfileCall__Inputs {
  _call: AddAddressToProfileCall;

  constructor(call: AddAddressToProfileCall) {
    this._call = call;
  }

  get altAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get isManager(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class AddAddressToProfileCall__Outputs {
  _call: AddAddressToProfileCall;

  constructor(call: AddAddressToProfileCall) {
    this._call = call;
  }
}

export class AddExternalAddressToProfileCall extends ethereum.Call {
  get inputs(): AddExternalAddressToProfileCall__Inputs {
    return new AddExternalAddressToProfileCall__Inputs(this);
  }

  get outputs(): AddExternalAddressToProfileCall__Outputs {
    return new AddExternalAddressToProfileCall__Outputs(this);
  }
}

export class AddExternalAddressToProfileCall__Inputs {
  _call: AddExternalAddressToProfileCall;

  constructor(call: AddExternalAddressToProfileCall) {
    this._call = call;
  }

  get networkID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get externalAddress(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddExternalAddressToProfileCall__Outputs {
  _call: AddExternalAddressToProfileCall;

  constructor(call: AddExternalAddressToProfileCall) {
    this._call = call;
  }
}

export class AddExternalNetworkCall extends ethereum.Call {
  get inputs(): AddExternalNetworkCall__Inputs {
    return new AddExternalNetworkCall__Inputs(this);
  }

  get outputs(): AddExternalNetworkCall__Outputs {
    return new AddExternalNetworkCall__Outputs(this);
  }
}

export class AddExternalNetworkCall__Inputs {
  _call: AddExternalNetworkCall;

  constructor(call: AddExternalNetworkCall) {
    this._call = call;
  }

  get networkType(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddExternalNetworkCall__Outputs {
  _call: AddExternalNetworkCall;

  constructor(call: AddExternalNetworkCall) {
    this._call = call;
  }
}

export class AddExternalProfileMappingCall extends ethereum.Call {
  get inputs(): AddExternalProfileMappingCall__Inputs {
    return new AddExternalProfileMappingCall__Inputs(this);
  }

  get outputs(): AddExternalProfileMappingCall__Outputs {
    return new AddExternalProfileMappingCall__Outputs(this);
  }
}

export class AddExternalProfileMappingCall__Inputs {
  _call: AddExternalProfileMappingCall;

  constructor(call: AddExternalProfileMappingCall) {
    this._call = call;
  }

  get profileID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get networkID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddExternalProfileMappingCall__Outputs {
  _call: AddExternalProfileMappingCall;

  constructor(call: AddExternalProfileMappingCall) {
    this._call = call;
  }
}

export class AddProfileMappingCall extends ethereum.Call {
  get inputs(): AddProfileMappingCall__Inputs {
    return new AddProfileMappingCall__Inputs(this);
  }

  get outputs(): AddProfileMappingCall__Outputs {
    return new AddProfileMappingCall__Outputs(this);
  }
}

export class AddProfileMappingCall__Inputs {
  _call: AddProfileMappingCall;

  constructor(call: AddProfileMappingCall) {
    this._call = call;
  }

  get profileID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AddProfileMappingCall__Outputs {
  _call: AddProfileMappingCall;

  constructor(call: AddProfileMappingCall) {
    this._call = call;
  }
}

export class CreateProfileCall extends ethereum.Call {
  get inputs(): CreateProfileCall__Inputs {
    return new CreateProfileCall__Inputs(this);
  }

  get outputs(): CreateProfileCall__Outputs {
    return new CreateProfileCall__Outputs(this);
  }
}

export class CreateProfileCall__Inputs {
  _call: CreateProfileCall;

  constructor(call: CreateProfileCall) {
    this._call = call;
  }

  get identityID(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class CreateProfileCall__Outputs {
  _call: CreateProfileCall;

  constructor(call: CreateProfileCall) {
    this._call = call;
  }
}

export class CreateProfileWithTagsCall extends ethereum.Call {
  get inputs(): CreateProfileWithTagsCall__Inputs {
    return new CreateProfileWithTagsCall__Inputs(this);
  }

  get outputs(): CreateProfileWithTagsCall__Outputs {
    return new CreateProfileWithTagsCall__Outputs(this);
  }
}

export class CreateProfileWithTagsCall__Inputs {
  _call: CreateProfileWithTagsCall;

  constructor(call: CreateProfileWithTagsCall) {
    this._call = call;
  }

  get identityID(): string {
    return this._call.inputValues[0].value.toString();
  }

  get tags(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }

  get deadline(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class CreateProfileWithTagsCall__Outputs {
  _call: CreateProfileWithTagsCall;

  constructor(call: CreateProfileWithTagsCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get forwarder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetExternalNetworkStateCall extends ethereum.Call {
  get inputs(): SetExternalNetworkStateCall__Inputs {
    return new SetExternalNetworkStateCall__Inputs(this);
  }

  get outputs(): SetExternalNetworkStateCall__Outputs {
    return new SetExternalNetworkStateCall__Outputs(this);
  }
}

export class SetExternalNetworkStateCall__Inputs {
  _call: SetExternalNetworkStateCall;

  constructor(call: SetExternalNetworkStateCall) {
    this._call = call;
  }

  get networkID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get state(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetExternalNetworkStateCall__Outputs {
  _call: SetExternalNetworkStateCall;

  constructor(call: SetExternalNetworkStateCall) {
    this._call = call;
  }
}

export class SetTagContractCall extends ethereum.Call {
  get inputs(): SetTagContractCall__Inputs {
    return new SetTagContractCall__Inputs(this);
  }

  get outputs(): SetTagContractCall__Outputs {
    return new SetTagContractCall__Outputs(this);
  }
}

export class SetTagContractCall__Inputs {
  _call: SetTagContractCall;

  constructor(call: SetTagContractCall) {
    this._call = call;
  }

  get tagContractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTagContractCall__Outputs {
  _call: SetTagContractCall;

  constructor(call: SetTagContractCall) {
    this._call = call;
  }
}

export class UpdateProfileCall extends ethereum.Call {
  get inputs(): UpdateProfileCall__Inputs {
    return new UpdateProfileCall__Inputs(this);
  }

  get outputs(): UpdateProfileCall__Outputs {
    return new UpdateProfileCall__Outputs(this);
  }
}

export class UpdateProfileCall__Inputs {
  _call: UpdateProfileCall;

  constructor(call: UpdateProfileCall) {
    this._call = call;
  }

  get identityID(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class UpdateProfileCall__Outputs {
  _call: UpdateProfileCall;

  constructor(call: UpdateProfileCall) {
    this._call = call;
  }
}

export class UpdateProfileWithTagsCall extends ethereum.Call {
  get inputs(): UpdateProfileWithTagsCall__Inputs {
    return new UpdateProfileWithTagsCall__Inputs(this);
  }

  get outputs(): UpdateProfileWithTagsCall__Outputs {
    return new UpdateProfileWithTagsCall__Outputs(this);
  }
}

export class UpdateProfileWithTagsCall__Inputs {
  _call: UpdateProfileWithTagsCall;

  constructor(call: UpdateProfileWithTagsCall) {
    this._call = call;
  }

  get identityID(): string {
    return this._call.inputValues[0].value.toString();
  }

  get tags(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }

  get deadline(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class UpdateProfileWithTagsCall__Outputs {
  _call: UpdateProfileWithTagsCall;

  constructor(call: UpdateProfileWithTagsCall) {
    this._call = call;
  }
}
